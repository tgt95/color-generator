{"version":3,"sources":["main.js"],"names":["window","onload","body","document","querySelector","hexInput","getElementById","hslInput","rgbInput","boxGenerator","querySelectorAll","boxResult","boxGeneratorLayer1","boxGeneratorLayer2","setTimeout","classList","remove","i","insertAdjacentHTML","forEach","el","index","addEventListener","event","this","select","range","hex","parentNode","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","toString","execCommand","pos","getBoundingClientRect","left","scrollX","top","scrollY","getAttribute","add","onclick","removeChild","contains","console","log","style","transform","ConvertHex","validate","calculate","printValue","focusInput","byte2Hex","n","nybHexString","String","substr","prototype","charCode","element","target","value","replace","type","preventDefault","length","rgb","fail","undefined","push","parseInt","join","r","g","b","h","s","max","Math","min","l","d","floor","apply","backgroundColor","borderColor","result","originalResult","count","cutResult","temp","split","pop","item","color","percentage","slice","innerHTML","closest"],"mappings":"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","file":"style.min.js","sourcesContent":["\"use strict\";\n\nwindow.onload = function () {\n  var body = document.querySelector('body'),\n      hexInput = document.getElementById('hex'),\n      hslInput = document.getElementById('hsl'),\n      rgbInput = document.getElementById('rgb'),\n      boxGenerator = document.querySelectorAll('.box-generator')[0],\n      boxResult = document.querySelectorAll('.box-result')[0],\n      boxGeneratorLayer1 = boxGenerator.querySelector('.box-generator--layer-1'),\n      boxGeneratorLayer2 = boxGenerator.querySelector('.box-generator--layer-2'),\n      step = 1;\n  /* Do Animation*/\n\n  setTimeout(function () {\n    boxGenerator.classList.remove('is-grow-up');\n    boxResult.classList.remove('is-grow-up');\n  }, 300);\n  /* Append Box */\n\n  function appendBoxItem() {\n    for (var i = 0; i < 100 / step; i++) {\n      document.querySelector('.box-result').insertAdjacentHTML('beforeend', '<div class=\"box-result--item\">' + '<div class=\"percentage\"></div>' + '<div class=\"item-flex\">' + '<div class=\"hex\"></div>' + '<button type=\"button\" class=\"btn btn-sm btn-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copied!\">' + '<i class=\"typcn typcn-book\"></i>' + '</button>' + '</div>' + '<div class=\"box-result--item-background\"></div>' + '</div>');\n    }\n  }\n\n  appendBoxItem();\n  /* For quick copy-paste */\n\n  document.querySelectorAll('input').forEach(function (el, index) {\n    el.addEventListener('focus', function (event) {\n      this.select();\n    });\n  });\n  document.querySelectorAll('.btn-copy').forEach(function (el, index) {\n    el.addEventListener('click', function (event) {\n      var hex = this.parentNode.querySelector('.hex');\n      if (hex == '') return;\n      copyToClipboard(hex);\n    });\n  });\n  /* Tooltip */\n\n  document.querySelectorAll('[data-toggle=\"tooltip\"]').forEach(function (el, index) {\n    el.addEventListener('click', function (event) {\n      var pos = el.getBoundingClientRect();\n      body.insertAdjacentHTML('beforeend', '<div class=\"tooltip tooltip-inner\" style=\"position: absolute; top: 0; left: 0; will-change: transform; transform: translate3d(' + (pos.left + window.scrollX) + 'px, ' + (pos.top + window.scrollY - 35) + 'px, 0);\">' + el.getAttribute('title') + '</div>');\n      body.querySelector('.tooltip').classList.add('open');\n      el.classList.add('open');\n      setTimeout(function () {\n        body.querySelector('.tooltip').classList.remove('open');\n        body.querySelector('.tooltip').classList.add('show');\n      }, 10);\n    });\n  });\n\n  window.onclick = function (event) {\n    document.querySelectorAll('.tooltip:not(.open)').forEach(function (el, index) {\n      body.querySelector('.tooltip').classList.remove('show');\n      setTimeout(function () {\n        document.querySelectorAll('[data-toggle=\"tooltip\"]').forEach(function (el, index) {\n          el.classList.remove('open');\n        });\n        body.removeChild(el);\n      }, 300);\n    });\n  };\n\n  window.addEventListener('resize', function () {\n    document.querySelectorAll('[data-toggle=\"tooltip\"]').forEach(function (el, index) {\n      if (el.classList.contains('open')) {\n        var pos = el.getBoundingClientRect();\n\n        if (body.querySelector('.tooltip') != null) {\n          // body.querySelector('.tooltip').style.top = (pos.top + window.scrollY - 35) + 'px'; \n          console.log(el.getBoundingClientRect());\n          console.log(pos.left + window.scrollX);\n          body.querySelector('.tooltip').style.transform = 'translate3d(' + (pos.left + window.scrollX) + 'px, ' + (pos.top + window.scrollY - 35) + 'px, 0)';\n        }\n      }\n    });\n  });\n  /* Change color on every key input. */\n\n  var ConvertHex = function ConvertHex(event) {\n    this.validate(event);\n    this.calculate(this.validate(event));\n    this.printValue();\n  };\n\n  ConvertHex.prototype.validate = function (event) {\n    var charCode = event.charCode,\n        element = event.target,\n        value = element.value,\n        hex = value.replace(/#/, '');\n\n    if (event.type == 'keypress') {\n      if (charCode != 0) {\n        // Allow A-F (Upercase & Lowercase) and Number\n        if ((charCode < 48 || charCode > 57 && charCode < 65 || charCode > 70 && charCode < 97 || charCode > 102) && charCode != 35) {\n          event.preventDefault();\n          element.classList.add('is-invalid');\n        } else {\n          element.classList.remove('is-invalid');\n        }\n      }\n    } // if (value.length === 1 && value !== '#')  element.value = '#' + value;\n    // if (hex.length == 3) hex = hex + hex;\n\n\n    if (value.length === 1 && value !== '#') element.value = '#' + value;\n    if (hex.length === 3) hex = hex + hex;\n    if (hex.length === 0) element.value = '';\n    return hex;\n  };\n\n  ConvertHex.prototype.calculate = function (value) {\n    // Calculate\n    var rgb = [],\n        fail = false;\n\n    if (value != '' || value != undefined) {\n      for (var i = 0; i < 6; i += 2) {\n        rgb.push(parseInt(value.substr(i, 2), 16));\n        fail = fail || rgb[rgb.length - 1].toString() === 'NaN';\n      }\n\n      rgbInput.value = fail ? '' : 'rgb(' + rgb.join(',') + ')';\n      hslInput.value = fail ? '' : 'hsl(' + rgbToHsl.apply(null, rgb).join(',') + ')'; // Add Color to Box Generator\n\n      boxGenerator.style.backgroundColor = rgbInput.value;\n      [boxGeneratorLayer1, boxGeneratorLayer2].forEach(function (element, index) {\n        element.style.borderColor = rgbInput.value;\n      });\n    }\n  };\n\n  ConvertHex.prototype.printValue = function () {\n    var result = hslInput.value;\n\n    if (!result == '' && result == result) {\n      var temp,\n          originalResult,\n          count,\n          cutResult = [];\n      temp = result.split(',').pop();\n\n      for (var i = 0; i <= 100; i += step) {\n        count = i.toString() + '%)';\n        originalResult = result.split(',');\n        originalResult.pop();\n        temp = originalResult;\n        temp.push(count.toString());\n        cutResult.push(temp.join(','));\n      }\n\n      var i = 0;\n      document.querySelectorAll('.box-result--item-background').forEach(function (item, index) {\n        item.style.backgroundColor = cutResult[index];\n        var color = item.style.backgroundColor,\n            percentage = ((i += step) - step).toString() + '%',\n            hex,\n            r,\n            g,\n            b;\n        color = color.substr(3).split(',');\n        r = color[0].substr(1);\n        g = color[1].substr(1);\n        b = color[2].substr(1).slice(0, -1);\n        hex = rgbToHex(r, g, b);\n        item.parentNode.querySelector('.hex').innerHTML = hex;\n        item.closest('.box-result--item').querySelector('.percentage').innerHTML = percentage;\n      });\n      boxResult.classList.remove('is-pending');\n    } else {\n      document.querySelectorAll('.box-result--item-background').forEach(function (item, index) {\n        item.style.backgroundColor = '';\n        item.parentNode.querySelector('.hex').innerHTML = '';\n        item.closest('.box-result--item').querySelector('.percentage').innerHTML = '';\n      });\n      boxResult.classList.add('is-pending');\n    }\n  };\n\n  function focusInput(event) {\n    new ConvertHex(event);\n  }\n  /* Click function */\n\n\n  hexInput.addEventListener('keypress', focusInput, false);\n  hexInput.addEventListener('keydown', focusInput, false);\n  hexInput.addEventListener('keyup', focusInput, false);\n  hexInput.addEventListener('blur', focusInput, false);\n  /* Function to convert rgb-to-hsl. */\n\n  function rgbToHsl(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h,\n        s,\n        l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0;\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    } // return [(h*100+0.5)|0, ((s*100+0.5)|0) + '%', ((l*100+0.5)|0) + '%'];\n\n\n    return [h = Math.floor(h * 360).toString(), s = Math.floor(s * 100).toString() + '%', l = Math.floor(l * 100).toString() + '%'];\n  }\n  /* Function to convert rgb-to-hex. */\n\n\n  function byte2Hex(n) {\n    var nybHexString = \"0123456789ABCDEF\";\n    return String(nybHexString.substr(n >> 4 & 0x0F, 1)) + nybHexString.substr(n & 0x0F, 1);\n  }\n\n  function rgbToHex(r, g, b) {\n    return '#' + byte2Hex(r) + byte2Hex(g) + byte2Hex(b);\n  }\n  /* Button Copy Click */\n\n\n  function getSelectionText() {\n    var selectedText = \"\";\n\n    if (window.getSelection) {\n      // all modern browsers and IE9+\n      selectedText = window.getSelection().toString();\n    }\n\n    return selectedText;\n  }\n\n  function selectElementText(el) {\n    var range = document.createRange(); // create new range object\n\n    range.selectNodeContents(el); // set range to encompass desired element text\n\n    var selection = window.getSelection(); // get Selection object from currently user selected text\n\n    selection.removeAllRanges(); // unselect any user selected text (if any)\n\n    selection.addRange(range); // add range to Selection object to select it\n  }\n\n  function copyToClipboard(element) {\n    selectElementText(element);\n    getSelectionText();\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n  }\n};"]}